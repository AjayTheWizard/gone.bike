---
import type { APIRoute } from 'astro';
import type { APIContext } from 'astro';



import weaviate from '@utils/weaviate';






let request = Astro.request;
  const formData = await request.formData();
  // console.log(formData)
  // console.log(formData.getAll('file'))
  const fileNames = await Promise.all(
    formData.getAll('file').map(async (file: File) => {
      let buf = await file.arrayBuffer()
      return {
        webkitRelativePath: file.webkitRelativePath,
        lastModified: file.lastModified,
        name: file.name,
        size: file.size,
        type: file.type,
        buffer: {
          type: 'Buffer',
          value: Array.from(
            new Int8Array(buf).values()
          ),

        },
        b64: Buffer.from(buf).toString('base64')
      };
    })
  );

  // console.log(fileNames)




  const resImage = await weaviate.graphql.get()
    .withClassName('Bike')
    .withFields('report_id _additional {certainty id}')
    .withNearImage({ image: fileNames[0].b64 })
    .withLimit(10)
    .do();

  // Write result to filesystem
  const result = resImage.data.Get.Bike;

  console.log(result)

---

<div>


  { result.map( (e) =>  (
    <div>
      <a href={`/report?id=${e.report_id}`}>report</a>
      <img src={`/photos/${e._additional.id}/`} width="100" height="100" border="1">
      <span>{ e._additional.certainty }</span>
    </div>
  ))}

</div>