---
import type { APIRoute } from 'astro';
import type { APIContext } from 'astro';
import { v4 as uuidv4 } from 'uuid';

import sharp from 'sharp'
import config from '@utils/config'
import search from '@utils/search'
import { Redis } from 'ioredis';


let request = Astro.request;

try {
  const formData = await request.formData();

  let file = formData.get('file');
  let buf = await file.arrayBuffer();

  let upload = await sharp(buf)
    .resize(config.IMG_MAX_W, config.IMG_MAX_H, {
      fit: sharp.fit.inside,
      withoutEnlargement: true
    })
    .toFormat('jpeg', { "quality": 100 })
    .toBuffer({resolveWithObject: true})


  // upload['name'] = file.name;
  // console.log(upload.data)

  let b64in = Buffer.from(upload.data).toString('base64')

  let id = await search.create(b64in)
  // console.log(id)

  return Astro.redirect(`/search/${id}`, 302)

} catch (e) {
  throw e
}
---
x